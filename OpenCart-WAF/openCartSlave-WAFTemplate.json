{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"    
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "namePrefix": {
      "type": "string"
    },
    "licenseToken2": {
      "type": "string"    
    },
    "applicationAddress": {
      "type": "string"
    },
    "applicationType": {
      "type": "string"
    },
    "blockingLevel": {
      "type": "string"
    },
    "applicationCertificate": {
      "type": "string"
    },
    "applicationKey": {
      "type": "string"
    },
    "applicationChain": {
      "type": "string"
    }
  },
  "variables": {
    "applicationName": "[parameters('namePrefix')]",
    "applicationProtocols": "http;https",
    "applicationPorts": "80;443",
    "applicationFQDN": "[concat(parameters('namePrefix'),'.westus.cloudapp.azure.com')]",
    "vnetAddressPrefix": "10.10.0.0/16",
    "vmSize": "Standard_A2",
    "ipAddress": "10.10.1.",
    "nicNamePrefix": "[concat(parameters('namePrefix'),'-nic')]",
    "loadBalancerName": "[concat(parameters('namePrefix'),'-alb')]",
    "availabilitySetName": "[concat(parameters('namePrefix'),'-avset')]",
    "newStorageAccountName": "[concat(parameters('namePrefix'),'stor')]",
    "wafNamePrefix": "[concat(parameters('namePrefix'),'-waf')]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups/',concat(parameters('namePrefix'),'-nsg'))]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "guiMgtID": "[concat(variables('lbID'),'/inboundNatRules/guimgt')]",
    "sshMgtID": "[concat(variables('lbID'),'/inboundNatRules/sshmgt')]",
    "publicIPID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('namePrefix'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('wafNamePrefix'),1)]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "Slave WAF"
      },
      "plan": {
        "name": "f5-bigip-virtual-edition-best-byol",
        "publisher": "f5-networks",
        "product": "f5-big-ip"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('wafNamePrefix'),1)]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "f5-networks",
            "offer": "f5-big-ip",
            "sku": "f5-bigip-virtual-edition-best-byol",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat('osdisk',1)]",
            "vhd": {
              "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('newStorageAccountName'),'/osDisk',1,'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',variables('nicNamePrefix')),1)]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',variables('newstorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "tags": {
        "displayName": "Script Extention"
      },
      "name": "[concat(variables('wafNamePrefix'),1,'/start')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',variables('wafNamePrefix'),1)]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/tstanley93/OpenCart-WAF/master/OpenCart-WAF/azuresecurity.sh",
            "https://raw.githubusercontent.com/tstanley93/OpenCart-WAF/master/OpenCart-WAF/start.sh"
          ],
          "commandToExecute": "[concat('bash start.sh ','false',';',concat(variables('wafNamePrefix'),add(copyindex(),1)),';',concat(variables('ipAddress'),add(add(4,copyindex()),1),';',parameters('adminPassword'),';',parameters('licenseToken2'),';',toLower(variables('applicationName')),';',concat(variables('wafNamePrefix'),0),';',concat(variables('ipAddress'),4),' 880;8444 ',variables('applicationProtocols'),' ',parameters('applicationAddress'),';',replace(toLower(parameters('location')),' ',''),' ',variables('applicationPorts'),' ',toLower(parameters('applicationType')),';',toLower(parameters('blockingLevel')),';',toLower(variables('applicationFQDN')),';',parameters('applicationCertificate'),';',parameters('applicationKey'),';',parameters('applicationChain')))]"
        }
      }
    }
  ],
  "outputs": {
    "WAF-GUI-URL": {
      "type": "string",
      "value": "[concat('https://',reference(variables('publicIPID')).dnsSettings.fqdn,':8443')]"
    },
    "WAF-SSH-URL": {
      "type": "string",
      "value": "[concat(reference(variables('publicIPID')).dnsSettings.fqdn,' ',8022)]"
    }
  }
}
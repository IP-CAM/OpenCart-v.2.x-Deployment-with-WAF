{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "namePrefix": {
      "type": "string",
      "metadata": {
        "description": "The name that will prefix all objects, and will serve as the unique DNS name for this instance."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "West US",
      "allowedValues": [
        "Brazil South",
        "Central US",
        "East Aisa",
        "East US",
        "East US 2",
        "Japan East",
        "Japan West",
        "North Central US",
        "North Europe",
        "South Central US",
        "Southeast Aisa",
        "West Europe",
        "West US"
      ],
      "metadata": {
        "description": "The data center you want to install this WAF into."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username used to login with."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password used to login with."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "description": "Virtual Machine instance size."
      }
    },
    "licenseToken1": {
      "type": "string"
    },
    "licenseToken2": {
      "type": "string"
    },
    "blockingLevel": {
      "type": "string",
      "metadata": {
        "description": "Please select how aggressive you would like the blocking level of this WAF to be.  Remember that the more aggressive the blocking level, the more potential there is for false-positives that the WAF might detect."
      },
      "defaultValue": "Medium",
      "allowedValues": [
        "Low",
        "Medium",
        "High"
      ]
    },
    "applicationCertificate": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The path to the SSL certificate file. (Optional)"
      }
    },
    "applicationKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The path to the SSL key file. (Optional)"
      }
    },
    "applicationChain": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The path to the SSL chain file. (Optional)"
      }
    }
  },
  "variables": {
    "lbName": "[concat(parameters('namePrefix'), 'lb')]",
    "avSetName": "[concat(parameters('namePrefix'), 'avset')]",
    "virtualNetworkName": "[concat(parameters('namePrefix'), 'vnet')]",
    "vnetAddressPrefix": "10.10.0.0/16",
    "subnetName": "[concat(parameters('namePrefix'), 'subnet')]",
    "subnetPrefix": "10.10.1.0/24",
    "storageAccountType": "Standard_LRS",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetName'))]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('namePrefix'))]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontend')]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/LoadBalancerBackend')]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "lbProbe443ID": "[concat(variables('lbID'),'/probes/tcpProbe443')]"
  },
  "resources": [
    {
      "apiVersion": "2015-01-01",
      "name": "opencartInfrastructuretemplate",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/tstanley93/OpenCart-WAF/master/OpenCart-WAF/openCartInfrastructureTemplate.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "namePrefix": { "value": "[parameters('namePrefix')]" },
          "location": { "value": "[parameters('location')]" },
          "vmSize": { "value": "[parameters('vmSize')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "opencartmysqltemplate",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "Microsoft.Resources/deployments/opencartInfrastructuretemplate"
      ],
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/tstanley93/OpenCart-WAF/master/OpenCart-WAF/openCartmysqlTemplate.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "namePrefix": { "value": "[parameters('namePrefix')]" },
          "location": { "value": "[parameters('location')]" },
          "vmSize": { "value": "[parameters('vmSize')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "openCartWebTemplate",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "Microsoft.Resources/deployments/opencartmysqltemplate"
      ],
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/tstanley93/OpenCart-WAF/master/OpenCart-WAF/openCartWebTemplate.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "namePrefix": { "value": "[parameters('namePrefix')]" },
          "location": { "value": "[parameters('location')]" },
          "vmSize": { "value": "[parameters('vmSize')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "openCartWAFTemplate",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "Microsoft.Resources/deployments/openCartWebTemplate"
      ],
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/tstanley93/OpenCart-WAF/master/OpenCart-WAF/openCartWAFTemplate.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "namePrefix": { "value": "[parameters('namePrefix')]" },
          "location": { "value": "[parameters('location')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "licenseToken1": { "value": "[parameters('licenseToken1')]" },
          "licenseToken2": { "value": "[parameters('licenseToken2')]" },
          "applicationAddress": { "value": "[reference('opencartInfrastructuretemplate').outputs.appipaddress.value]" },
          "applicationType": { "value": "Linux" },
          "blockingLevel": { "value": "[parameters('blockingLevel')]" },
          "applicationCertificate": { "value": "[parameters('applicationCertificate')]" },
          "applicationKey": { "value": "[parameters('applicationKey')]" },
          "applicationChain": { "value": "[parameters('applicationChain')]" }
        }
      }
    }
  ],
  "outputs": {
    
  }
}
